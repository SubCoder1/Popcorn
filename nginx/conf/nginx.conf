upstream docker-frontend {
    server popcorn-web:8081;
}

upstream docker-backend {
    server popcorn:8080;
}

limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;

server {
    listen 80;
    listen [::]:80;

    server_name popcorntv.click www.popcorntv.click;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://popcorntv.click$request_uri;
    }
}

server {
    listen 443 default_server ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name popcorntv.click;

    ssl_certificate         /etc/nginx/ssl/live/popcorntv.click/fullchain.pem;
    ssl_certificate_key     /etc/nginx/ssl/live/popcorntv.click/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/live/popcorntv.click/fullchain.pem;

    # intermediate configuration
    ssl_protocols               TLSv1.2;
    ssl_ciphers                 ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers   on;

    ssl_stapling        on;
    ssl_stapling_verify on;

    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:5m;
    ssl_session_tickets off;

    access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error_log;
    
    location / {
        gzip on;
        index index.html;
        root /usr/share/nginx/html/;

        proxy_pass http://docker-frontend;

        proxy_redirect      off;
        proxy_http_version  1.1;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host   $server_name;
        proxy_cache_bypass                  $http_upgrade;
    }

    location /api/ {
        limit_req zone=one burst=10 nodelay;

        # Forward incoming requests to gin server instance
        proxy_pass http://docker-backend/api/;

        add_header X-Frame-Options          DENY;
        add_header X-Content-Type-Options   nosniff;
        add_header X-XSS-Protection         "1; mode=block";
        add_header Referrer-Policy          "origin";

        # Disable request and response buffering for tusd
        proxy_request_buffering     off;
        proxy_buffering             off;
        client_max_body_size        0;
        chunked_transfer_encoding   off;

        # SSE related configurations
        proxy_connect_timeout       5h;
        proxy_read_timeout          5h;
        proxy_cache                 off;

        proxy_http_version          1.1;
        proxy_set_header            Upgrade $http_upgrade;
        proxy_set_header            Connection "";

        # Add X-Forwarded-* headers
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-Host     $host;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        # Accept range requests
        proxy_force_ranges on;
    }
}
